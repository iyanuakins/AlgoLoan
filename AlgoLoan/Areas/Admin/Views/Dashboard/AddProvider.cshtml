@model AlgoLoan.Models.ProviderViewModel

@{
    ViewBag.Title = "Add New Provider";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="testimonials pt-lg-5 pb-lg-5">
    <div class="container">
        <div class="row">
            <div class="offset-md-2 col-md-8">
                <div class="">
                    <div class=" text-uppercase">
                        <h3 class="text-center text-white">Add new loan provider</h3>
                    </div>
                    <div class="" style="padding: 40px; width: 100%;">
                        @using (Html.BeginForm("AddProvider", "Dashboard", FormMethod.Post, new { role = "form" }))
                        {
                            if (TempData.ContainsKey("Message"))
                            {
                                <h3 class="text-center @((string)TempData["MessageState"])">@((string)TempData["Message"])</h3>
                            }
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "text-white" })
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.minRate, htmlAttributes: new { @class = "text-white" })
                                    @Html.EditorFor(model => model.minRate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.minRate, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.maxRate, htmlAttributes: new { @class = "text-white" })
                                    @Html.EditorFor(model => model.maxRate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.maxRate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.minAmount, htmlAttributes: new { @class = "text-white" })
                                    @Html.EditorFor(model => model.minAmount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.minAmount, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.maxAmount, htmlAttributes: new { @class = "text-white" })
                                    @Html.EditorFor(model => model.maxAmount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.maxAmount, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.minDuration, htmlAttributes: new { @class = "text-white" })
                                    @Html.EditorFor(model => model.minDuration, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.minDuration, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.maxDuration, htmlAttributes: new { @class = "text-white" })
                                    @Html.EditorFor(model => model.maxDuration, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.maxDuration, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "text-white" })
                                @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-4">
                                    @Html.EditorFor(model => model.studentLoan)
                                    @Html.LabelFor(model => model.studentLoan, htmlAttributes: new { @class = "text-white" })
                                    @Html.ValidationMessageFor(model => model.studentLoan, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.EditorFor(model => model.individualLoan)
                                    @Html.LabelFor(model => model.individualLoan, htmlAttributes: new { @class = "text-white" })
                                    @Html.ValidationMessageFor(model => model.individualLoan, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.EditorFor(model => model.businessLoan)
                                    @Html.LabelFor(model => model.businessLoan, htmlAttributes: new { @class = "text-white" })
                                    @Html.ValidationMessageFor(model => model.businessLoan, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <input type="submit" class="btn btn-primary float-right" value="Add Provider" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
